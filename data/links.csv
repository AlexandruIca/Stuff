id,url,title,description
0,"https://threejs.org/","Three.js for Learning Graphics Programming","An easy to use graphics lib for JS"
1,"https://jorenjoestar.github.io/post/data_driven_rendering_pipeline/","Data Driven Rendering: Pipelines","A description of a simplified render graph, very well written, a lot of concepts that video games use are presented"
2,"https://www.pbrt.org/index.html","Physically Based Rendering: From Theory to Implementation","Introduces concepts and theory of photorealistic rendering, includes code examples as well"
3,"https://www.youtube.com/watch?v=GNO_CYUjMK8","Making WebGL Dance","Nothing WebGL specific, introduces core concepts in 3D graphics in a very attractive way"
4,"https://www.shadertoy.com/","Shadertoy","A variety of cool examples of shaders running directly in the browser"
5,"https://iquilezles.org/","Inigo Quilez's Website","Co-creator of Shadertoy, lots of interesting articles/videos/code samples"
6,"https://www.youtube.com/user/raviramamoorthi/videos","Raviramamoorthi","A lot of courses on computer graphics, especially ray tracing, but also stuff like OpenGL or 2D stuff"
7,"https://en.wikipedia.org/wiki/Bentley%E2%80%93Ottmann_algorithm","Bentley-Ottmann Algorithm","O((n+k) log n) algorithm for finding intersections of line segments"
8,"https://raphlinus.github.io/gpu/2020/02/12/gpu-resources.html","GPU Resources","A pretty big list of resources for GPU programming in general, includes stuff related to OpenCL/Cuda, Vulkan, WebGPU, Metal, SPIR-V, shading lanugages"
9,"https://github.com/servo/surfman","Surfman","Low level rust library for managing surfaces using GPU memory, meaning render targets, can draw to a window, can draw to multiple windows, probably useful as a reference for implementing a window API"
10,"https://www.cprogramming.com/tutorial/animation/animation_engine_design.html","Designing An Object Oriented Animation Engine","A bit outdated, but probably useful as a reference for implementing an animation engine"
11,"https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_equations","Navier Stokes Equations","Useful for fluid simulations"
12,"https://www.youtube.com/watch?v=UUfXWzp0-DU","Flutter's Rendering Pipeline","A look at some of the internals of Flutter"
13,"https://flutter.dev/docs/resources/inside-flutter","Inside Flutter","A deep dive into the inner workings of Flutter"
14,"http://www.songho.ca/opengl/gl_projectionmatrix.html","OpenGL Projection Matrix","Presents how the projection matrix works"
15,"https://users.cg.tuwien.ac.at/zsolnai/gfx/rendering-course/","Rendering Course","From the 'Two Minutes Papers' guy"
16,"https://www.youtube.com/watch?v=P6UKhR0T6cs&t=1540s","The Physics of Light and Rendering","From John Carmack, explains 3D concepts"
17,"https://www.youtube.com/watch?v=bGe-d09Nc_M&t=4289s","How 3D Video Games Do Graphics","From Jonathan Blow, explains core concepts in 3D graphics"
18,"https://thebookofshaders.com/","The Book of Shaders","A lot of stuff regarding fragment shaders"
19,"https://www.iquilezles.org/www/articles/terrainmarching/terrainmarching.htm","Ray Marching Terrain","Generating a very detailed scene with ray marching"
20,"https://acko.net/blog/animate-your-way-to-glory/","Animate Your Way to Glory","How to use animations for a nice UI"
21,"https://rainbowhunt.com/","Rainbowhung","Rain simulator, lots of resources in the 'credits' section"
22,"https://tympanus.net/codrops/2015/11/04/rain-water-effect-experiments/","Rain and Water Effect Experiments","Generating rain effect with WebGL"
23,"https://en.wikipedia.org/wiki/Gilbert%E2%80%93Johnson%E2%80%93Keerthi_distance_algorithm","Gilbert-Johnson-Keerthi Distance Algorithm","AKA GJK, useful especially for collision detection"
24,"https://github.com/prideout/prideout.github.com","Philip Rideout","Various computer graphics techniques"
25,"https://graphicscodex.courses.nvidia.com/app.html","The Graphics Codex Book","Book on computer graphics, especially physically based rendering"
26,"http://graphicscodex.com/projects/projects/","Grphics Codex: Graphics Programming Projects","Projects to do to learn about computer graphics"
27,"http://www.realtimerendering.com/","Real-Time Rendering","Covering a lot of stuff on (duh) real time rendering, including curves and BRDFs(of course)"
28,"https://www.amazon.com/Computer-Graphics-Scratch-Gabriel-Gambetta/dp/1718500769?tag=realtimerenderin&pldnSite=1","Computer Graphics from Scratch: A Programmer's Introduction to 3D Rendering","Building a renderer from scratch"
29,"https://www.reddit.com/r/GraphicsProgramming/comments/iiveq7/computer_graphics_learning_resources/","Computer Graphics Learning Resources","List of useful links for computer graphics"
30,"https://brlcad.org/","BRL-CAD","Interactive geometry editing, high performance ray tracing and other stuff, probably useful as a reference for implementing something resembling a CAD"
31,"https://google.github.io/filament/Filament.md.html","Google Filament: Description","Deep dive into the inner workings of Filament, useful even for an overview of physically based rendering in general"
32,"https://google.github.io/filament/Materials.html","Materials Guide For Filament","Overview of the material types in Filament, useful to see al different kinds of materials for physically based rendering"
33,"https://www.youtube.com/watch?v=ukkbNKTgf5U&t=292s","Rendering Isometric Tiles","Easy to follow tutorial on how to render isometric tiles in 2D"
34,"http://www.jezzamon.com/fourier/index.html","An Interactive Introduction to Fourier Transforms","Title says it all"
35,"https://www.youtube.com/watch?v=8--5LwHRhjk","Painting a Selfie Girl, With Maths","Using ray marching to draw a character"
36,"https://bottosson.github.io/posts/colorwrong/","How Software Gets Color Wrong","Presents how to represent color in software correctly"
37,"https://github.com/kobzol/hardware-effects-gpu","Hardware Effects on the GPU","How hardware affects performance on the GPU in various cases"
38,"https://vkguide.dev/docs/extra-chapter/multithreading/","Multithreading for Game Engines","Overview of an architecutre for game engines"
39,"https://interplayoflight.wordpress.com/2020/05/09/gpu-architecture-resources/","GPU Architecture Resources","A lot of resources on how the GPU works"
40,"https://github.com/DinoZ1729/Galaxy","ASCII Simulation of Colliding Galaxies","Probably useful as a reference for implementing ASCII art"
41,"https://www.youtube.com/watch?v=O-52enqUSNw&t=348s","Is a Realistic Water Bubble Simulation Possible?","A relatively simple technique for generating bubbles"
42,"https://projectf.io/posts/fpga-graphics/","Exploring FPGA Graphics","Seeing how graphics work at the hardware level, uses SystemVerilog"
43,"https://github.com/jdah/minecraft-weekend","Minecraft in 48 Hours in C","Easy to read source of a minecraft 'clone', probably useful as a reference for seeing how to render voxels"
44,"https://github.com/jbush001/NyuziProcessor","Nyuzi Processor: Experimental GPGPU Processor Hardware Design","Uses SystemVerilog and LLVM"
45,"https://www.youtube.com/watch?v=mdPeXJ0eiGc","Design Patterns for Low-Level Real-Time Rendering","Among other things, there are some cool tricks for ring buffers here, some tips fow working with aligned data for GPU access"
46,"https://www.jendrikillner.com/post/graphics-programming-weekly-issue-165/","Graphics Programming Weekly","Various articles on all kinds of stuff related to computer graphics"
47,"https://www.youtube.com/watch?v=LRbgii6mVU4","How Normal Mapping Works","Video explaining in quite some detail how normal mapping works"
48,"https://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/","What Every Coder Should Know About Gamma","A very nice dive into gamma correction"
